#!/bin/sh
# helper function for get_latest_pypi_version https://www.linuxjournal.com/content/parsing-rss-news-feed-bash-script
xmlgetnext () {
   local IFS='>'
   read -d '<' TAG VALUE
}

# pass in a URL to a PyPi RSS feed and it splits out the latest version
get_latest_pypi_version () {
	url="https://pypi.org/rss/project/${1}/releases.xml"
	item_flag="false"
	
	curl -s $url | while xmlgetnext ; do
		if [[ $TAG == "item" && $item_flag == "false" ]]; then			
			item_flag="true"			
		elif [[ $item_flag == "true" ]]; then
			echo $VALUE
			return
		fi
	done
}


regex_home=$(echo "${HOME}" | sed -e 's/\//\\\//g' )
req_files=`locate requirements.txt | grep 'src/.*requirements.txt'`
packages=()
for f in $req_files
do
    lines=$(cat $f)
    for line in $lines
    do
        if [[ $line == *"=="* ]]; then
            packages+=(`echo $line | cut -d'=' -f 1`)
            echo "$line ($f)" | sed "s/$regex_home/~/" >> /tmp/check_reqs	
        fi
    done		
done	
sort /tmp/check_reqs

## sort and filter unique packages
packages=($(printf "%s\n" "${packages[@]}" | sort -u))

printf "\n\nLatest Versions\n-----------------------\n"

for p in ${packages[@]}
do
    version=`get_latest_pypi_version ${p}`
    echo "$p ($version)"
done

rm /tmp/check_reqs

